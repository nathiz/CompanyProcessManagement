// <auto-generated />
using CompanyProcessManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProcessManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250327022235_AddDepartamentoAndSetorToArea")]
    partial class AddDepartamentoAndSetorToArea
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProcessManagement.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Departamento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProcessoId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubProcessId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.HasIndex("SubProcessId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Ferramenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProcessoId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubProcessId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.HasIndex("SubProcessId");

                    b.ToTable("Ferramentas");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Process", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProcessoId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubProcessId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProcessoId");

                    b.HasIndex("SubProcessId");

                    b.ToTable("Responsaveis");
                });

            modelBuilder.Entity("CompanyProcessManagement.SubProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProcessId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubProcessId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.HasIndex("SubProcessId");

                    b.ToTable("Subprocessos");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Documento", b =>
                {
                    b.HasOne("CompanyProcessManagement.Models.Process", "Processo")
                        .WithMany("Documentos")
                        .HasForeignKey("ProcessoId");

                    b.HasOne("CompanyProcessManagement.SubProcess", "SubProcesso")
                        .WithMany("Documentos")
                        .HasForeignKey("SubProcessId");

                    b.Navigation("Processo");

                    b.Navigation("SubProcesso");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Ferramenta", b =>
                {
                    b.HasOne("CompanyProcessManagement.Models.Process", "Processo")
                        .WithMany("Ferramentas")
                        .HasForeignKey("ProcessoId");

                    b.HasOne("CompanyProcessManagement.SubProcess", "SubProcesso")
                        .WithMany("Ferramentas")
                        .HasForeignKey("SubProcessId");

                    b.Navigation("Processo");

                    b.Navigation("SubProcesso");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Process", b =>
                {
                    b.HasOne("CompanyProcessManagement.Models.Area", "Area")
                        .WithMany("Processos")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Responsavel", b =>
                {
                    b.HasOne("CompanyProcessManagement.Models.Process", "Processo")
                        .WithMany("Responsaveis")
                        .HasForeignKey("ProcessoId");

                    b.HasOne("CompanyProcessManagement.SubProcess", "SubProcesso")
                        .WithMany("Responsaveis")
                        .HasForeignKey("SubProcessId");

                    b.Navigation("Processo");

                    b.Navigation("SubProcesso");
                });

            modelBuilder.Entity("CompanyProcessManagement.SubProcess", b =>
                {
                    b.HasOne("CompanyProcessManagement.Models.Process", "Processo")
                        .WithMany("Subprocessos")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyProcessManagement.SubProcess", null)
                        .WithMany("SubprocessosFilhos")
                        .HasForeignKey("SubProcessId");

                    b.Navigation("Processo");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Area", b =>
                {
                    b.Navigation("Processos");
                });

            modelBuilder.Entity("CompanyProcessManagement.Models.Process", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Ferramentas");

                    b.Navigation("Responsaveis");

                    b.Navigation("Subprocessos");
                });

            modelBuilder.Entity("CompanyProcessManagement.SubProcess", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Ferramentas");

                    b.Navigation("Responsaveis");

                    b.Navigation("SubprocessosFilhos");
                });
#pragma warning restore 612, 618
        }
    }
}
